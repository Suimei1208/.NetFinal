@model dynamic

<link rel="stylesheet" href="~/css/generalize.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/background.css" asp-append-version="true" />

<div class="page-container">

    <!-- Phần bên trái - Product List -->
    <div class="left-section custom-container">
        @if (ViewBag.Products != null)
        {
            <table class="table  table-responsive">
                <thead class="thead-dark">
                    <tr>
                        <th>Name Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Quantity in stock</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in ViewBag.Products)
                    {
                        <tr>
                            <td>@order.ProductName</td>
                            <td>@order.RetailPrice.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) VND</td>
                            <td>
                                <form id="orderForm" method="post" asp-controller="Orders" asp-action="addDetail">
                                    <div class="quantity-controls d-flex justify-content-center">
                                        <input type="hidden" name="ProductName" value="@order.ProductName" />
                                        <input type="hidden" name="RetailPrice" value="@order.RetailPrice" />
                                        <input type="number" class="quantity-input form-control" value="1" min="1" name="Quantities" />
                                        @if (order.Quantity == 0)
                                        {
                                            <button disabled class="quantity-control-btn btn btn-outline-secondary" data-action="decrease" type="button">-</button>
                                            <button disabled class="quantity-control-btn btn btn-outline-secondary" data-action="increase" type="button">+</button>
                                            <button disabled class="quantity-control-btn btn btn-success" data-action="add" type="submit">Add</button>
                                        }
                                        else
                                        {
                                            <button class="quantity-control-btn btn btn-outline-secondary" data-action="decrease" type="button">-</button>
                                            <button class="quantity-control-btn btn btn-outline-secondary" data-action="increase" type="button">+</button>
                                            <button class="quantity-control-btn btn btn-success" data-action="add" type="submit">Add</button>
                                        }
                                    </div>
                                </form>
                            </td>
                            <td>@order.Quantity</td>
                        </tr>
                    }
                </tbody>
            </table>
            }
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    var rows = document.querySelectorAll('.left-section .table tbody tr');

                    rows.forEach(function (row) {
                        var stockQuantity = parseInt(row.querySelector('td:last-child').textContent.trim());
                        var quantityInput = row.querySelector('.quantity-input');
                        var decreaseBtn = row.querySelector('[data-action="decrease"]');
                        var increaseBtn = row.querySelector('[data-action="increase"]');

                        function updateQuantityControls() {
                            var currentQuantity = parseInt(quantityInput.value, 10);

                            decreaseBtn.disabled = currentQuantity <= 1;
                            increaseBtn.disabled = currentQuantity >= stockQuantity;

                            if (currentQuantity > stockQuantity) {
                                quantityInput.value = stockQuantity;
                            }
                        }

                        decreaseBtn.addEventListener('click', function () {
                            if (quantityInput.value > 1) {
                                quantityInput.value--;
                                updateQuantityControls();
                            }
                        });

                        increaseBtn.addEventListener('click', function () {
                            if (quantityInput.value < stockQuantity) {
                                quantityInput.value++;
                                updateQuantityControls();
                            }
                        });

                        quantityInput.addEventListener('change', updateQuantityControls);

                        updateQuantityControls();
                    });
                });
            </script>
        
    </div>

    <!-- Phần giữa - Barcode Input và Product Listing -->
    <div class="middle-section custom-container">
        <form method="post" asp-controller="Orders" asp-action="FindProducts">
            <input type="text" placeholder="Barcode" name="Barcode" />
            <button class="btn btn-primary" type="submit">Find Products</button>
            <span class="text-danger">@Html.ValidationMessage("Barcode")</span>
        </form>

        @if (ViewBag.OrderDetails != null)
        {
            <table class="table table-responsive">
                <thead class="thead-light">
                    <tr>
                        <th>Barcode</th>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Unit Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="orderDetailsBody">
                    @foreach (var order in ViewBag.OrderDetails)
                    {
                        <tr>
                            <td>@(order.Products?.Barcode ?? "N/A")</td>
                            <td>@(order.Products?.ProductName ?? "N/A")</td>
                            <td>
                                <form method="post" asp-controller="Orders" asp-action="Minus">
                                    <input type="hidden" name="Barcode" value="@order.Products.Barcode" />
                                    <button type="submit" class="quantity-control-btn btn btn-outline-secondary">-</button>
                                </form>
                            </td>
                            <td>@order.Quantity</td>
                            <td>
                                <form method="post" asp-controller="Orders" asp-action="Plus">
                                    <input type="hidden" name="Barcode" value="@order.Products.Barcode" />
                                    <button type="submit" class="quantity-control-btn btn btn-outline-secondary">+</button>
                                </form>
                            </td>
                            <td>@order.UnitPrice.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) VND</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div style="float: right;">
                <div>Total Amount:  <strong id="totalAmount">0 VND</strong></div>
            </div>


            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    var rows = document.querySelectorAll("#orderDetailsBody tr");
                    var totalAmount = 0;

                    rows.forEach(function (row) {
                        var unitPrice = parseFloat(row.cells[5].textContent.replace(" VND", "").replace(/\./g, "").replace(",", "."));
                        totalAmount += unitPrice;
                    });

                    var totalAmountCell = document.getElementById("totalAmount");
                    totalAmountCell.textContent = formatCurrency(totalAmount);

                    // Update the hidden input for TotalAmount
                    var hiddenTotalAmountInput = document.getElementById("hiddenTotalAmount");
                    hiddenTotalAmountInput.value = totalAmount;

                    function formatCurrency(amount) {
                        var formattedAmount = amount.toLocaleString("vi-VN", { style: 'currency', currency: 'VND' });
                        return formattedAmount.replace(/\.00$/, '');
                    }
                });
            </script>

        }
        else
        {
            <p>No order details available.</p>
        }

    </div>
    <!-- Phần bên phải - Customer Details và Orders -->
    <div class="right-section custom-container">
    <form id="customerForm" method="post" asp-controller="Orders" asp-action="Index">
        <input type="text" id="phoneInput" placeholder="Phone Number" name="Phone" />
            <button class="btn btn-primary" type="submit">Find Customer</button>
        <span class="text-danger">@Html.ValidationMessage("Phone")</span>
    </form>

    @if (ViewBag.CustomerNotFound != null && (bool)ViewBag.CustomerNotFound)
    {
        <form id="newCustomerForm" method="post" asp-controller="Orders" asp-action="Create">
            <input type="text" id="newPhoneInput" placeholder="Phone Number" name="Phone" value="@ViewBag.Phone" />
            <input type="text" id="newAddressInput" placeholder="Address" name="Address" />
            <input type="text" id="newNameInput" placeholder="Full Name" name="Name" />
            <button class="btn btn-primary" type="submit" onclick="saveNewCustomer()">Save Customer</button>
        </form>
    }
    else if (ViewBag.Customer != null)
    {
        <div class="customer-info">
            <div class="row">
                <div class="col">
                    <h3>Customer Information</h3>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <p>Phone: <span id="customerPhone">@ViewBag.Customer.Phone</span></p>
                    <p>Name: <span id="customerName">@ViewBag.Customer.Name</span></p>
                    <p>Address: <span id="customerAddress">@ViewBag.Customer.Address</span></p>
                </div>
            </div>
        </div>

            <table class="table table-responsive">
            <thead class="thead-light">
                <tr>
                    <th>Customer</th>
                    <th>Saler</th>
                    <th>Quantity</th>
                    <th>Unit Price</th>
                    <th>OrderDate</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in ViewBag.Orders)
                {
                    <tr>
                        <td>@order.Customer.Name</td>
                        <td>@order.AccountId</td>
                        <td>@order.Quantity</td>
                        <td>@order.UnitPrice</td>
                        <td>@order.OrderDate</td>
                            <td>
                                <button class="btn btn-danger"
                                        data-toggle="modal"
                                        data-target="#orderDetailsModal"
                                        data-order-id="@order.Id"
                                        onclick="loadOrderDetails(@order.Id)">
                                    Details
                                </button>
                            </td>
                    </tr>
                    } <!--<td> <a asp-action="Index" asp-route-id="order.Id" data-toggle="modal" data-target="#orderDetailsModal">Details</a></td>-->
            </tbody>
        </table>
    }
    </div>
</div>

<div style="width: 100%; display: flex; justify-content: right; margin-bottom: 20px;">
    <form method="post" asp-controller="Orders" asp-action="Buy">
        <input type="hidden" name="TotalAmount" id="hiddenTotalAmount" value="0" />
        <span class="text-danger">@Html.ValidationMessage("Error")</span>
        <button type="submit" class="btn btn-primary m-1" >Order</button>
    </form>
    <button id="btnPrint" class="btn btn-warning m-1">Print PDF</button>
</div>

<!--Modals-->
<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
        <button type="button" class="close btn btn-dark" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="table-responsive">
        <table class="table">
                        <thead id="orderDetailsHeader">
                            <!-- Các thẻ <th> sẽ được thêm ở đây bằng JavaScript -->
                        </thead>
                        <tbody id="orderDetailsBody">
                            <!-- Thông tin chi tiết hóa đơn sẽ được thêm ở đây bằng JavaScript -->
                        </tbody>
        </table>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
    function loadOrderDetails(orderId) {
        // Gửi yêu cầu AJAX để lấy chi tiết hóa đơn dựa trên orderId
        $.ajax({
            url: '/Orders/GetOrderDetails',
            type: 'GET',
            data: { orderId: orderId },
            success: function (data) {
                // Cập nhật tiêu đề của modal
                $('#orderDetailsModalLabel').text('Order Details - Order ID ' + orderId);

                // Cập nhật header của table
                $('#orderDetailsHeader').html(data);

                // Hiển thị modal
                $('#orderDetailsModal').modal('show');
            },
            error: function () {
                alert('Đã xảy ra lỗi khi tải chi tiết hóa đơn.');
            }
        });
    }
</script>



<script>
    document.getElementById('btnPrint').addEventListener('click', function () {
        var pdfUrl = '/Orders/GeneratePdf';

        // Tạo form
        var form = document.createElement('form');
        form.setAttribute('method', 'post');
        form.setAttribute('action', pdfUrl);

        // Thêm input để đánh dấu việc xóa session
        var deleteSessionInput = document.createElement('input');
        deleteSessionInput.setAttribute('type', 'hidden');
        deleteSessionInput.setAttribute('name', 'deleteSession');
        deleteSessionInput.setAttribute('value', 'true');

        // Thêm các input và sau đó submit form
        form.appendChild(deleteSessionInput);
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);

        // Sau khi submit form và trang đã bắt đầu tải file, reload trang sau 1 giây (có thể cần điều chỉnh thời gian phù hợp)
        setTimeout(function () {
            location.reload(true);
        }, 1000);
    });
</script>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>